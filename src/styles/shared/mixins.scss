@import "src/styles/shared/variables.scss";

@mixin button-primary(
  $primary-color,
  $primary-hover,
  $color-font,
  $font-hover,
  $border,
  $border-hover
) {
  transition: 0.25s;
  border: $border;
  color: $color-font;
  border-radius: 0.25rem;
  cursor: pointer;
  background-color: $primary-color;
  &:active {
    transform: scale(0.95);
  }
  &:hover {
    background-color: $primary-hover;
    border: $border-hover;
    color: $font-hover;
  }
}

@mixin media-up($breakpoint-min, $breakpoint-max) {
  @media (min-width: map-get($breakpoints,$breakpoint-min)) and (max-width: map-get($breakpoints,$breakpoint-max)) {
    @content;
  }
}

@mixin input-default() {
  border: 1px solid silver;
  border-radius: 0.2rem;
  &:focus {
    background-color: white;
    border: 1px solid black;
    outline: none;
  }
  &.error {
    border: 1px solid red;
    background-color: rgba($color: red, $alpha: 0.05) !important;
  }
}

@mixin dflex($jcontent, $aitems, $flexdirection) {
  display: flex;
  justify-content: $jcontent;
  align-items: $aitems;
  flex-direction: $flexdirection;
}

@mixin dgrid($rows, $columns, $p-items, $p-content) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  place-items: $p-items;
  place-content: $p-content;
}

@mixin input-search() {
  span {
    border-radius: 0.25rem;
    padding: 0.5rem 1rem;
    border: 1px solid rgb(192, 192, 192);
    display: grid;
    grid-template: 100% / 90% 10%;
    input,
    svg {
      place-self: center;
      width: 100%;
    }
    input {
      background-color: transparent;
      border: 0;
      width: 100%;
      height: 100%;
      &:focus {
        outline: none;
      }
    }
    svg {
    }
  }
}

@mixin x-button {
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.25rem;
  width: 30px;
  height: 30px;
  background-color: rgb(233, 233, 233);
  svg {
    fill: black;
  }
  &.darkMode {
    background-color: $color-3-darkmode;
    svg {
      fill: white;
    }
  }
}
